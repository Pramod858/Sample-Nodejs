name: CI/CD Pipeline based on Tag

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Provide the tag name for the release'
        required: true
        default: ''

jobs:
  fetch-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Fetch release info
        id: fetch_release
        run: |
          release_info=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.inputs.tag_name }}")
          
          if [[ -z "$release_info" ]]; then
            echo "No release found for tag ${{ github.event.inputs.tag_name }}"
            exit 1
          fi

          echo "$release_info" | jq .
          release_id=$(echo "$release_info" | jq -r .id)
          release_url=$(echo "$release_info" | jq -r .url)
          release_name=$(echo "$release_info" | jq -r .name)
          release_tag_name=$(echo "$release_info" | jq -r .tag_name)
          
          echo "release_id=$release_id" >> $GITHUB_ENV
          echo "release_url=$release_url" >> $GITHUB_ENV
          echo "release_name=$release_name" >> $GITHUB_ENV
          echo "release_tag_name=$release_tag_name" >> $GITHUB_ENV

  ci_cd_pipeline:
    needs: fetch-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ env.release_tag_name }}

      - name: Deploy the application
        run: | 
          echo "Write steps to deploy application here."